{"ast":null,"code":"var _jsxFileName = \"C:\\\\Deloite Company\\\\frontend\\\\src\\\\Components\\\\Signup.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// import './Signup.css';\n\n// const Signup = () => {\n//     const [username, setUsername] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [password, setPassword] = useState('');\n\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const res = await axios.post('http://localhost:5000/api/auth/signup', { username, email, password });\n//             console.log(res.data);\n//             alert('Sign-Up Successful');\n//         } catch (err) {\n//             console.error(err.response.data);\n//             alert('Sign-Up Failed');\n//         }\n//     };\n\n//     return (\n//         <html>\n//             <body className='body'>\n\n//                 <form onSubmit={handleSubmit} className='form'>\n//                     <p className='title'>Signup</p>\n//                     <input \n//                         className='username'\n//                         type=\"text\" \n//                         placeholder=\"Username\" \n//                         value={username} \n//                         onChange={(e) => setUsername(e.target.value)} \n//                     />\n//                     <input \n//                         className='email'\n//                         type=\"email\" \n//                         placeholder=\"Email\" \n//                         value={email} \n//                         onChange={(e) => setEmail(e.target.value)} \n//                     />\n//                     <input \n//                         className='password'\n//                         type=\"password\" \n//                         placeholder=\"Password\" \n//                         value={password} \n//                         onChange={(e) => setPassword(e.target.value)} \n//                     />\n//                     <button className='button' type=\"submit\">Sign Up</button>\n//                     <p>already signupped? <a href=\"/login\">Signin!</a></p>\n//                 </form> \n\n//             </body>\n//         </html>\n//     );\n// };\n\n// export default Signup;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Signup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('http://localhost:5000/signup?username=\"deloite\"&email=\"nunesupriya8@gmail.com\"&password=\"Deloite@109\"', {\n        username,\n        email,\n        password\n      });\n      if (res.data.success) {\n        console.log(res.data.message);\n        alert('Sign-Up Successful');\n      } else {\n        console.log(res.data.message);\n        alert('Sign-Up Failed: ' + res.data.message);\n      }\n    } catch (err) {\n      let errorMessage = 'Sign-Up Failed: ';\n      if (err.response && err.response.data && err.response.data.message) {\n        errorMessage += err.response.data.message;\n      } else if (err.response && err.response.data) {\n        errorMessage += JSON.stringify(err.response.data);\n      } else if (err.request) {\n        errorMessage += 'No response from server.';\n      } else {\n        errorMessage += err.message;\n      }\n      console.error('Error:', errorMessage);\n      alert(errorMessage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"html\", {\n    children: /*#__PURE__*/_jsxDEV(\"body\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"title\",\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"username\",\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"email\",\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"password\",\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          type: \"submit\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"already signed up? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/login\",\n            children: \"Sign in!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(Signup, \"tRYla3vCO/TiaNXVkXSQty2VxO8=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Signup","_s","username","setUsername","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","res","post","data","success","console","log","message","alert","err","errorMessage","response","JSON","stringify","request","error","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","href","_c","$RefreshReg$"],"sources":["C:/Deloite Company/frontend/src/Components/Signup.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n\r\n// import './Signup.css';\r\n\r\n// const Signup = () => {\r\n//     const [username, setUsername] = useState('');\r\n//     const [email, setEmail] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const res = await axios.post('http://localhost:5000/api/auth/signup', { username, email, password });\r\n//             console.log(res.data);\r\n//             alert('Sign-Up Successful');\r\n//         } catch (err) {\r\n//             console.error(err.response.data);\r\n//             alert('Sign-Up Failed');\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <html>\r\n//             <body className='body'>\r\n            \r\n//                 <form onSubmit={handleSubmit} className='form'>\r\n//                     <p className='title'>Signup</p>\r\n//                     <input \r\n//                         className='username'\r\n//                         type=\"text\" \r\n//                         placeholder=\"Username\" \r\n//                         value={username} \r\n//                         onChange={(e) => setUsername(e.target.value)} \r\n//                     />\r\n//                     <input \r\n//                         className='email'\r\n//                         type=\"email\" \r\n//                         placeholder=\"Email\" \r\n//                         value={email} \r\n//                         onChange={(e) => setEmail(e.target.value)} \r\n//                     />\r\n//                     <input \r\n//                         className='password'\r\n//                         type=\"password\" \r\n//                         placeholder=\"Password\" \r\n//                         value={password} \r\n//                         onChange={(e) => setPassword(e.target.value)} \r\n//                     />\r\n//                     <button className='button' type=\"submit\">Sign Up</button>\r\n//                     <p>already signupped? <a href=\"/login\">Signin!</a></p>\r\n//                 </form> \r\n            \r\n//             </body>\r\n//         </html>\r\n//     );\r\n// };\r\n\r\n// export default Signup;\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Signup.css';\r\n\r\nconst Signup = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/signup?username=\"deloite\"&email=\"nunesupriya8@gmail.com\"&password=\"Deloite@109\"', { username, email, password });\r\n            if (res.data.success) {\r\n                console.log(res.data.message);\r\n                alert('Sign-Up Successful');\r\n            } else {\r\n                console.log(res.data.message);\r\n                alert('Sign-Up Failed: ' + res.data.message);\r\n            }\r\n        } catch (err) {\r\n            let errorMessage = 'Sign-Up Failed: ';\r\n            if (err.response && err.response.data && err.response.data.message) {\r\n                errorMessage += err.response.data.message;\r\n            } else if (err.response && err.response.data) {\r\n                errorMessage += JSON.stringify(err.response.data);\r\n            } else if (err.request) {\r\n                errorMessage += 'No response from server.';\r\n            } else {\r\n                errorMessage += err.message;\r\n            }\r\n            console.error('Error:', errorMessage);\r\n            alert(errorMessage);\r\n        }\r\n    };\r\n    \r\n\r\n    return (\r\n        <html>\r\n            <body className='body'>\r\n                <form onSubmit={handleSubmit} className='form'>\r\n                    <p className='title'>Signup</p>\r\n                    <input \r\n                        className='username'\r\n                        type=\"text\" \r\n                        placeholder=\"Username\" \r\n                        value={username} \r\n                        onChange={(e) => setUsername(e.target.value)} \r\n                    />\r\n                    <input \r\n                        className='email'\r\n                        type=\"email\" \r\n                        placeholder=\"Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)} \r\n                    />\r\n                    <input \r\n                        className='password'\r\n                        type=\"password\" \r\n                        placeholder=\"Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)} \r\n                    />\r\n                    <button className='button' type=\"submit\">Sign Up</button>\r\n                    <p>already signed up? <a href=\"/login\">Sign in!</a></p>\r\n                </form> \r\n            </body>\r\n        </html>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}